from langchain import hub
from langchain.prompts.prompt import PromptTemplate

CYPHER_GENERATION_TEMPLATE = """Твоя задача - найти в схеме графа вершинs, чтобы получить о них информацию для ответа на вопрос. Ты должен основываться на предоставленной схеме графа и следовать инструкциям ниже:
1. Напиши имена вершин в формате списка, например ["вершина1", "вершина2"] без каких-либо других символов;
2. Используй ТОЛЬКО вершины, УПОМЯНУТЫЕ В СХЕМЕ ГРАФА.
3. Список должен состоять из НЕ БОЛЕЕ, чем 3 вершин.

Схема графа:
{schema}

Вопрос: {question}

Имена вершин:"""

cypher_prompt = PromptTemplate(
    template=CYPHER_GENERATION_TEMPLATE, input_variables=["schema", "question"]
)


CYPHER_QA_TEMPLATE = """Ты помощник, который помогает формировать приятные и понятные для человека ответы.
Ты имеешь информацию, которую ты должен использовать для построения ответа, но только если она релевантна вопросу.
Найденная информация является авторитетной, ты никогда не должен сомневаться в ней или пытаться использовать свои внутренние знания для ее исправления.
Если найденная информация пуста, сообщи, что информации не найдено.
Финальный ответ должен быть легко читаемым, структурированным и полезным.

Информация:
{context}

Вопрос:
{question}

Напиши полезный ответ:"""

qa_prompt = PromptTemplate(
    input_variables=["context", "question"], template=CYPHER_QA_TEMPLATE
)


AGENT_PROMPT_TEMPLATE = """Ты должен ответить на вопрос Human максимально полезно и точно. У тебя есть доступ к инструменту, который называется "query-knowledge-base-tool":
{tools}

Больше никаких инструментов нет. Вызывай этот инструмент, чтобы найти ответ по базе знаний. Если по базе знаний ничего не нашлось, попробуй вызвать инструмент снова, а потом ответь самостоятельно.
Ты также можешь сразу дать ответ, для этого передай значение для ключа "action": "Final Answer".

Используй JSON-объект для указания инструмента, предоставив значение для ключа "action": "query-knowledge-base-tool" и значение для ключа "action_input" (ввод для "query-knowledge-base-tool").

Таким образом, допустимые значения "action": "Final Answer" или "query-knowledge-base-tool"

Предоставляй только ОДНО действие в $JSON_BLOB, как показано:
```
{{
  "action": $TOOL_NAME,
  "action_input": $INPUT
}}
```

Следуй этому формату:

Question: входящий вопрос для ответа
Thought: учитывайте предыдущие и последующие шаги
Action:
```
$JSON_BLOB
```
Observation: результат действия
... (повтори Question/Action/Thought N раз)
Thought: Я знаю, что ответить.
Action:
```
{{
  "action": "Final Answer",
  "action_input": "Финальный ответ человеку"
}}

Начинай! Помни, что ВСЕГДА нужно отвечать действительным json-объектом для одного действия. Не используй форматированный вывод. Используй инструменты при необходимости. Отвечай мне напрямую, если это уместно. Формат - Action:```$JSON_BLOB```затем Observation\n\n"""

# Change pre-made prompt template to Russian
(agent_prompt := hub.pull("hwchase17/structured-chat-agent")).messages[
    0
].prompt.template = AGENT_PROMPT_TEMPLATE


SYSTEM_PROMPT = """Ты - интеллектуальный помощник по имени Papper, который отвечает на вопросы по документам пользователя."""
